function generateRandomKey(length) {
  const charset = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  let key = "";
  for (let i = 0; i < length; i++) {
    const randomIndex = Math.floor(Math.random() * charset.length);
    key += charset.charAt(randomIndex);
  }
  return key;
}

async function encryptMessage(message, key) {
  const iv = window.crypto.getRandomValues(new Uint8Array(12));
  const encoder = new TextEncoder();
  const data = encoder.encode(message);

  const cryptoKey = await window.crypto.subtle.importKey(
    "raw",
    encoder.encode(key),
    "AES-GCM",
    true,
    ["encrypt"]
  );

  const encryptedData = await window.crypto.subtle.encrypt(
    {
      name: "AES-GCM",
      iv: iv,
    },
    cryptoKey,
    data
  );

  return {
    iv: iv,
    data: new Uint8Array(encryptedData),
  };
}

async function decryptMessage(encryptedMessage, key) {
  const encoder = new TextEncoder();
  const iv = encryptedMessage.iv;
  const data = encryptedMessage.data;

  const cryptoKey = await window.crypto.subtle.importKey(
    "raw",
    encoder.encode(key),
    "AES-GCM",
    true,
    ["decrypt"]
  );

  const decryptedData = await window.crypto.subtle.decrypt(
    {
      name: "AES-GCM",
      iv: iv,
    },
    cryptoKey,
    data
  );

  const decoder = new TextDecoder();
  return decoder.decode(decryptedData);
}
  const messageToEncrypt = "Este es un mensaje secreto";
  const randomKey = generateRandomKey(16); // Utilizamos 16 bytes para AES-128

(async () => {
  // Mensaje a encriptar

  // Generar una clave aleatoria

  // Encriptar el mensaje
  const encryptedMessage = await encryptMessage(messageToEncrypt, randomKey);
  console.log("Mensaje encriptado:", encryptedMessage);

  // Desencriptar el mensaje
  const decryptedMessage = await decryptMessage(encryptedMessage, randomKey);
  console.log("Mensaje desencriptado:", decryptedMessage);
  console.log("randomKey:", randomKey);
})();
